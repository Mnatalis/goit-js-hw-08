{"mappings":"gfACA,IAwBQA,EAxBRC,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,sBAEpC,SAASC,IACP,IAAMC,EAAiBC,aAAaC,QAAQ,uBACtCT,EAAc,CAChBU,MAAO,GACPC,QAAS,IAEb,GAAGJ,EACC,IACI,IAAMK,EAAaC,KAAKC,MAAMP,GAC9BQ,OAAOC,KAAKhB,GAAaiB,SAAQ,SAACC,GAC9BlB,EAAYkB,GAAON,EAAWM,E,IAEpC,MAAMC,GACJC,QAAQC,KAAKF,E,CAGrB,OAAOnB,C,CAaT,SAASsB,EAAcC,GACnB,IAAMC,EAAiC,KAAtBD,EAAKE,MAAMC,OACtBC,EAAeJ,EAAKK,WAAWC,SAKrC,GAJIF,EAAaG,OAAS,GACbH,EAAa,GAAGI,UAAUC,SAAS,cAC9CL,EAAa,GAAGM,SAEfT,EAAQ,CACT,IAAMU,EAAU9B,SAAS+B,cAAc,QACvCD,EAAQH,UAAUK,IAAI,aACtBF,EAAQG,MAAMC,SAAW,OACzBJ,EAAQK,YAAc,6BACtBhB,EAAKK,WAAWY,OAAON,E,CAEzB,OAAQV,C,CAvBJxB,EAAcM,IACpBS,OAAOC,KAAKhB,GAAaiB,SAAQ,SAACC,GAC9B,IAAMK,EAAOnB,SAASC,cAAc,UAAcoC,OAAJvB,EAAI,OAC/CK,IACCA,EAAKE,MAAQzB,EAAYkB,G,IAmDnCf,EAAKuC,iBAAiB,SAAS,EAAAzC,EAAA0C,WAX/B,SAAiBC,GAEb,IAAM5C,EAAcM,IACpBN,EAAY4C,EAAGC,OAAOC,MAAQF,EAAGC,OAAOpB,MACrCH,EAAcsB,EAAGC,SAClBrC,aAAauC,QAAQ,sBAAuBlC,KAAKmC,UAAUhD,G,GAMhB,MACjDG,EAAKuC,iBAAiB,UAAU,SAACE,GAC7B,IAAM5C,EAAcM,IACpBsC,EAAGK,iBAhCP,SAAkBC,GACd,IAAMC,EAAWD,EAAKC,SAChBnD,EAAcM,IAKpB,OAJkBS,OAAOC,KAAKhB,GAAaoD,QAAO,SAACC,EAAKnC,GACtD,IAAMM,GAAWF,EAAc6B,EAASjC,IACxC,OAASmC,IAAS7B,C,IACjB,E,CA2BC8B,CAASV,EAAGW,kBAvBpB,SAAqBC,GACjB,IAAML,EAAWK,EAAKL,SAChBnD,EAAcM,IACFS,OAAOC,KAAKhB,GAAaiB,SAAQ,SAACC,GAClDiC,EAASjC,GAAKO,MAAQ,E,IAsBxBgC,CAAYb,EAAGW,eACfnC,QAAQsC,IAAI1D,GACZQ,aAAamD,WAAW,uBACxBvC,QAAQsC,IAAI,mD","sources":["src/js/03-feedback.js"],"sourcesContent":["// import throttle from 'lodash.throttle';\nimport {throttle} from 'lodash';\n\nconst form = document.querySelector(\"form.feedback-form\");\n\nfunction readStorage(){\n  const storageRawData = localStorage.getItem(\"feedback-form-state\");\n  const storageData = {\n      email: \"\",\n      message: \"\"\n  };\n  if(storageRawData){\n      try{\n          const parsedData = JSON.parse(storageRawData);\n          Object.keys(storageData).forEach((key) =>{\n              storageData[key] = parsedData[key];\n          });\n      } catch(exc){\n          console.warn(exc);\n      }\n  }\n  return storageData;\n}\n\nfunction writeStorageValues(){\n  const storageData = readStorage();\n  Object.keys(storageData).forEach((key) =>{\n      const elem = document.querySelector(`[name=\"${key}\"]`);\n      if(elem){\n          elem.value = storageData[key];\n      }\n  });\n}\n\nfunction validateEmpty(elem){\n    const isEmpty = (elem.value.trim() === '');\n    const elemChildren = elem.parentNode.children;\n    if( elemChildren.length > 1 \n              && elemChildren[1].classList.contains(\"error-msg\") ){\n      elemChildren[1].remove();\n    }\n    if(isEmpty){\n      const elemMsg = document.createElement(\"SPAN\");\n      elemMsg.classList.add('error-msg');\n      elemMsg.style.fontSize = '11px';\n      elemMsg.textContent = 'This field cannot be empty';\n      elem.parentNode.append(elemMsg);\n    }\n    return !isEmpty;\n}\n\nfunction validate(form){\n    const elements = form.elements;\n    const storageData = readStorage();\n    const allFilled = Object.keys(storageData).reduce((acc, key) => {\n      const isEmpty = !validateEmpty(elements[key]);\n      return ( acc && (!isEmpty) );\n    }, true);\n    return allFilled;\n}\n\nfunction clearInputs(form){\n    const elements = form.elements;\n    const storageData = readStorage();\n    const allFilled = Object.keys(storageData).forEach((key) => {\n      elements[key].value = '';\n    });\n}\n\nfunction onInput(ev){\n    //console.log(ev.target.name, ev.target.value);\n    const storageData = readStorage();\n    storageData[ev.target.name] = ev.target.value;\n    if(validateEmpty(ev.target)){\n      localStorage.setItem(\"feedback-form-state\", JSON.stringify(storageData));\n    }\n}\n\nwriteStorageValues();\n\nform.addEventListener(\"input\", throttle(onInput, 500));\nform.addEventListener(\"submit\", (ev) => {\n    const storageData = readStorage();\n    ev.preventDefault();\n    if(!validate(ev.currentTarget)){\n      return ;\n    }\n    clearInputs(ev.currentTarget);\n    console.log(storageData);\n    localStorage.removeItem(\"feedback-form-state\");\n    console.log('localStorage[\"feedback-form-state\"] was removed')\n})\n"],"names":["storageData","$1WSnx","parcelRequire","$b00c40859be242c5$var$form","document","querySelector","$b00c40859be242c5$var$readStorage","storageRawData","localStorage","getItem","email","message","parsedData","JSON","parse","Object","keys","forEach","key","exc","console","warn","$b00c40859be242c5$var$validateEmpty","elem","isEmpty","value","trim","elemChildren","parentNode","children","length","classList","contains","remove","elemMsg","createElement","add","style","fontSize","textContent","append","concat","addEventListener","throttle","ev","target","name","setItem","stringify","preventDefault","form1","elements","reduce","acc","$b00c40859be242c5$var$validate","currentTarget","form2","$b00c40859be242c5$var$clearInputs","log","removeItem"],"version":3,"file":"03-feedback.de4a9277.js.map"}